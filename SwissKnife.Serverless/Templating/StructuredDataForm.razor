@using System.Collections.Immutable
@using System.Diagnostics.CodeAnalysis
@using Classeur.Core.CustomizableStructure
@using DotNetToolbox

@typeparam TCustomizableDocument where TCustomizableDocument : ICustomizableDocument<TCustomizableDocument>

@inject EventCallbackFactory _eventCallbackFactory
@inject ImmutableList<KnownFieldTypeDescription> _fieldTypeDescriptions

@foreach (FieldDescription field in ViewModel?.Fields ?? Enumerable.Empty<FieldDescription>())
{
    <div class="form-group">
        <DynamicComponent Type="_fieldTypeDescriptions.First(t => t.Represents(field.Type)).EditValueFormType"
                          Parameters="GetParameters(field)"/>
    </div>
}

@code {

    [Parameter]
    public IStructuredDataViewModel? ViewModel { get; set; }


    private Dictionary<string, object> GetParameters(in FieldDescription field) => new()
    {
        [nameof(IValueUI.Field)] = field,
        [nameof(IValueUI.ViewModel)] = ViewModel!,
    };

}
